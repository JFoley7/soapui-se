<?xml version="1.0" encoding="UTF-8"?>
<!--  ~ Copyright (C) 2004-2016 SmartBear Software  ~  ~ Licensed under the EUPL, Version 1.1 or - as soon as they will be approved by the European Commission - subsequent  ~ versions of the EUPL (the "Licence");  ~ You may not use this work except in compliance with the Licence.  ~ You may obtain a copy of the Licence at:  ~  ~ http://ec.europa.eu/idabc/eupl  ~  ~ Unless required by applicable law or agreed to in writing, software distributed under the Licence is  ~ distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either  ~ express or implied. See the Licence for the specific language governing permissions and limitations  ~ under the Licence. -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://eviware.com/soapui/config" targetNamespace="http://eviware.com/soapui/config" elementFormDefault="qualified">

    <xsd:complexType name="Workspace">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="project" type="tns:WorkspaceProject" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="collectInfoForSupport" type="xsd:boolean" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="soapui-version" type="xsd:string"/>
                <xsd:attribute name="projectRoot" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:element name="soapui-workspace" type="tns:Workspace"/>

    <xsd:complexType name="Project">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="interface" type="tns:Interface" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="testSuite" type="tns:TestSuite" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="mockService" type="tns:MockService" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="restMockService" type="tns:RESTMockService" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="endpointStrategy" type="tns:EndpointStrategy" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="requirements" maxOccurs="1" minOccurs="0" type="tns:RequirementsType"/>
                    <xsd:element name="properties" type="tns:PropertiesType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="afterLoadScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="beforeSaveScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="encryptedContent" type="xsd:base64Binary" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="encryptedContentAlgorithm" type="xsd:string" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="wssContainer" type="tns:WssContainer" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="databaseConnectionContainer" type="tns:DatabaseConnectionContainer" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="oAuth2ProfileContainer" type="tns:OAuth2ProfileContainer" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="oAuth1ProfileContainer" type="tns:OAuth1ProfileContainer" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reporting" type="tns:ReportingType" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="reportScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="beforeRunScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="afterRunScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="eventHandlers" type="tns:EventHandlerType" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="sensitiveInformation" type="tns:SensitiveInformation" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="environment" type="tns:Environment" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="soapui-version" type="xsd:string"/>
                <xsd:attribute name="resourceRoot" type="xsd:string"/>
                <xsd:attribute name="defaultScriptLanguage" type="xsd:string"/>
                <xsd:attribute name="abortOnError" type="xsd:boolean"/>
                <xsd:attribute name="timeout" type="xsd:long"/>
                <xsd:attribute name="runType" type="tns:TestSuiteRunTypes"/>
                <xsd:attribute name="scriptLibrary" type="xsd:string"/>
                <xsd:attribute name="activeEnvironment" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="Interface">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="definitionCache" type="tns:DefinitionCache" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="endpoints" type="tns:Endpoints"/>
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="WsdlInterface">
        <xsd:complexContent>
            <xsd:extension base="tns:Interface">
                <xsd:sequence>
                    <xsd:element name="operation" type="tns:Operation" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="definition" type="xsd:string"/>
                <xsd:attribute name="bindingName" type="xsd:string"/>
                <xsd:attribute name="soapVersion" type="tns:SoapVersionTypes"/>
                <xsd:attribute name="wsaVersion" type="tns:WsaVersionType"/>
                <xsd:attribute name="anonymous" type="tns:AnonymousType"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RestService">
        <xsd:complexContent>
            <xsd:extension base="tns:Interface">
                <xsd:sequence>
                    <xsd:element name="resource" type="tns:RestResource" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="inferredSchema" type="xsd:string" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="definitionUrl" type="xsd:string"/>
                <xsd:attribute name="basePath" type="xsd:string"/>
                <xsd:attribute name="wadlVersion" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="Endpoints">
        <xsd:sequence>
            <xsd:element name="endpoint" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Operation">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="call" type="tns:WsdlRequest" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="requestParts" maxOccurs="1" minOccurs="0" type="tns:Parts"/>
                    <xsd:element name="responseParts" type="tns:Parts" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="action" type="xsd:string"/>
                <xsd:attribute name="bindingOperationName" type="xsd:string"/>
                <xsd:attribute name="style" type="tns:OperationStyles"/>
                <xsd:attribute name="type" type="tns:OperationTypes"/>
                <xsd:attribute name="inputName" type="xsd:string"/>
                <xsd:attribute name="outputName" type="xsd:string"/>
                <!-- NOTE isOneWay only kept for backwards compatibility, type is used from now on. -->
                <xsd:attribute name="isOneWay" type="xsd:boolean" default="false"/>
                <xsd:attribute name="sendsAttachments" type="xsd:boolean"/>
                <xsd:attribute name="receivesAttachments" type="xsd:boolean"/>
                <xsd:attribute name="anonymous" type="tns:AnonymousType"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:simpleType name="OperationStyles">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Document"/>
            <xsd:enumeration value="Rpc"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="OperationTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="One-Way"/>
            <xsd:enumeration value="Request-Response"/>
            <xsd:enumeration value="Notification"/>
            <xsd:enumeration value="Solicit-Response"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="AbstractRequest" abstract="true">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="encoding" type="xsd:string"/>
                    <xsd:element name="endpoint" type="xsd:string"/>
                    <xsd:element name="request" type="tns:CompressedString" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="originalUri" type="xsd:string" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="credentials" type="tns:Credentials" maxOccurs="1" minOccurs="1"/>
                    <xsd:element name="attachment" type="tns:Attachment" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="jmsConfig" type="tns:JMSHeaderConf" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="jmsPropertyConfig" type="tns:JMSPropertiesConf" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="sslKeystore" type="xsd:string"/>
                <xsd:attribute name="timeout" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="WsdlRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractRequest">
                <xsd:sequence>
                    <xsd:element name="wsaConfig" type="tns:WsaConfig" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="wsrmConfig" type="tns:WsrmConfig" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="wssPasswordType" type="xsd:string"/>
                <xsd:attribute name="outgoingWss" type="xsd:string"/>
                <xsd:attribute name="incomingWss" type="xsd:string"/>
                <xsd:attribute name="useWsAddressing" type="xsd:boolean"/>
                <xsd:attribute name="useWsReliableMessaging" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:element name="soapui-project" type="tns:Project"/>

    <xsd:complexType name="ModelItem">
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="settings" type="tns:Settings" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="timestamp" type="xsd:dateTime"/>
    </xsd:complexType>

    <xsd:complexType name="TestAssertion">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="configuration" type="xsd:anyType"/>
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string" use="required"/>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LoadTestAssertion">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="configuration" type="xsd:anyType"/>
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="TestSuite">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="runType" type="tns:TestSuiteRunTypes" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="testCase" type="tns:TestCase" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="properties" type="tns:PropertiesType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="setupScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="tearDownScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportTemplates" type="tns:ReportTemplate" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="reportParameters" type="tns:PropertiesType" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
                <xsd:attribute name="abortOnError" type="xsd:boolean"/>
                <xsd:attribute name="failOnErrors" type="xsd:boolean"/>
                <xsd:attribute name="timeout" type="xsd:long"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="LoadTest">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="threadCount" type="xsd:int" default="5"/>
                    <xsd:element name="startDelay" type="xsd:int" maxOccurs="1" minOccurs="1"/>
                    <xsd:element name="sampleInterval" type="xsd:int"/>
                    <xsd:element name="calculateTPSOnTimePassed" type="xsd:boolean"/>
                    <xsd:element name="resetStatisticsOnThreadCountChange" type="xsd:boolean"/>
                    <xsd:element name="historyLimit" type="xsd:long" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="testLimit" type="xsd:long" maxOccurs="1" minOccurs="1"/>
                    <xsd:element name="limitType" type="tns:LoadTestLimitTypes" maxOccurs="1" minOccurs="1"/>
                    <xsd:element name="loadStrategy" type="tns:LoadStrategy"/>
                    <xsd:element name="assertion" type="tns:LoadTestAssertion" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="maxAssertionErrors" type="xsd:long" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="statisticsLogFolder" type="xsd:string"/>
                    <xsd:element name="statisticsLogInterval" type="xsd:int"/>
                    <xsd:element name="logStatisticsOnThreadChange" type="xsd:boolean"/>
                    <xsd:element name="cancelOnReachedLimit" type="xsd:boolean"/>
                    <xsd:element name="cancelExcessiveThreads" type="xsd:boolean"/>
                    <xsd:element name="strategyInterval" type="xsd:int"/>
                    <xsd:element name="setupScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="tearDownScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="updateStatisticsPerTestStep" type="xsd:boolean"/>
                    <xsd:element name="reportScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportParameters" type="tns:PropertiesType" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="TestCase">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="testStep" type="tns:TestStep" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="loadTest" type="tns:LoadTest" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="setupScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="tearDownScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="properties" type="tns:PropertiesType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="requirements" type="tns:RequirementsType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportTemplates" type="tns:ReportTemplate" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="reportScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportParameters" type="tns:PropertiesType" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="securityTest" type="tns:SecurityTest" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="breakPoints" type="tns:BreakPoint" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="keepSession" type="xsd:boolean" use="optional" />
                <xsd:attribute name="failOnError" type="xsd:boolean" use="optional" />
                <xsd:attribute name="failTestCaseOnErrors" type="xsd:boolean" use="optional" />
                <xsd:attribute name="discardOkResults" type="xsd:boolean" />
                <xsd:attribute name="searchProperties" type="xsd:boolean" />
                <xsd:attribute name="disabled" type="xsd:boolean"/>
                <xsd:attribute name="timeout" type="xsd:long"/>
                <xsd:attribute name="maxResults" type="xsd:int"/>
                <xsd:attribute name="wsrmEnabled" type="xsd:boolean"/>
                <xsd:attribute name="wsrmVersion" type="tns:WsrmVersionType" />
                <xsd:attribute name="wsrmAckTo" type="xsd:string" />
                <xsd:attribute name="wsrmExpires" type="xsd:long" />
                <xsd:attribute name="amfAuthorisation" type="xsd:boolean" />
                <xsd:attribute name="amfLogin" type="xsd:string" />
                <xsd:attribute name="amfPassword" type="xsd:string" />
                <xsd:attribute name="amfEndpoint" type="xsd:string" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="TestStep">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="config" type="xsd:anyType"/>
                    <xsd:element name="reportTemplates" type="tns:ReportTemplate" maxOccurs="unbounded" minOccurs="0" />
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string" use="required" />
                <xsd:attribute name="disabled" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RequestStep">
        <xsd:sequence>
            <xsd:element name="interface" type="xsd:string"/>
            <xsd:element name="operation" type="xsd:string"/>
            <xsd:element name="request" type="tns:WsdlRequest"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PropertyTransfersStep">
        <xsd:sequence>
            <xsd:element name="transfers" type="tns:PropertyTransfer" maxOccurs="unbounded" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PropertyTransfer">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="sourceType" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="sourceStep" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="sourcePath" type="xsd:string"/>
            <xsd:element name="targetType" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="targetStep" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="targetPath" type="xsd:string"/>
            <xsd:element name="type" maxOccurs="1" minOccurs="0" type="tns:PropertyTransferTypes" default="XPATH"/>
            <xsd:element name="targetTransferType" maxOccurs="1" minOccurs="0" type="tns:PropertyTransferTypes" default="XPATH"/>
            <xsd:element name="upgraded" type="xsd:boolean"/>
        </xsd:sequence>
        <xsd:attribute name="failOnError" type="xsd:boolean"/>
        <xsd:attribute name="setNullOnMissingSource" type="xsd:boolean"/>
        <xsd:attribute name="transferTextContent" type="xsd:boolean"/>
        <xsd:attribute name="ignoreEmpty" type="xsd:boolean"/>
        <xsd:attribute name="transferToAll" type="xsd:boolean"/>
        <xsd:attribute name="useXQuery" type="xsd:boolean"/>
        <xsd:attribute name="disabled" type="xsd:boolean"/>
        <xsd:attribute name="transferChildNodes" type="xsd:boolean"/>
        <xsd:attribute name="entitize" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="Credentials">
        <xsd:sequence>
            <xsd:element name="username" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="password" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="domain" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="selectedAuthProfile" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="addedBasicAuthenticationTypes" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="preemptive" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="authType">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Global HTTP Settings"/>
                        <xsd:enumeration value="Preemptive"/>
                        <xsd:enumeration value="NTLM"/>
                        <xsd:enumeration value="SPNEGO/Kerberos"/>
                        <xsd:enumeration value="OAuth 2.0"/>
                        <xsd:enumeration value="OAuth 1.0"/>
                        <xsd:enumeration value="No Authorization"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Endpoint">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="username" type="xsd:string" use="optional"/>
                <xsd:attribute name="password" type="xsd:string"/>
                <xsd:attribute name="domain" type="xsd:string"/>
                <xsd:attribute name="wssType" type="xsd:string"/>
                <xsd:attribute name="wssTimeToLive" type="xsd:string"/>
                <xsd:attribute name="mode">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="COPY"/>
                            <xsd:enumeration value="OVERRIDE"/>
                            <xsd:enumeration value="COMPLEMENT"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="label" type="xsd:string"/>
                <xsd:attribute name="outgoingWss" type="xsd:string"/>
                <xsd:attribute name="incomingWss" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
	
    <xsd:simpleType name="PropertyTransferSourceType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="REQUEST"/>
            <xsd:enumeration value="RESPONSE"/>
            <xsd:enumeration value="ENDPOINT"/>
            <xsd:enumeration value="DOMAIN"/>
            <xsd:enumeration value="USERNAME"/>
            <xsd:enumeration value="PASSWORD"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="PropertyTransferTargetType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="REQUEST"/>
            <xsd:enumeration value="ENDPOINT"/>
            <xsd:enumeration value="DOMAIN"/>
            <xsd:enumeration value="USERNAME"/>
            <xsd:enumeration value="PASSWORD"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="GotoStep">
        <xsd:sequence>
            <xsd:element name="condition" type="tns:GotoCondition" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GotoCondition">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="expression" type="xsd:string"/>
            <xsd:element name="targetStep" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="GotoConditionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="XPATH"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="PropertyTransferTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="XPATH"/>
            <xsd:enumeration value="XQUERY"/>
            <xsd:enumeration value="JSONPATH"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="LoadStrategy">
        <xsd:sequence>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="config" type="xsd:anyType"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="LoadTestLimitTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="COUNT"/>
            <xsd:enumeration value="TIME"/>
            <xsd:enumeration value="COUNT_PER_THREAD"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:element name="soapui-settings" type="tns:Settings"/>

    <xsd:complexType name="Settings">
        <xsd:sequence>
            <xsd:element name="setting" type="tns:Setting" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="encryptedContent" type="xsd:base64Binary" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="encryptedContentAlgorithm" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Setting">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="id" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="PropertiesStep">
        <xsd:sequence>
            <xsd:element name="source" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="target" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="properties" maxOccurs="1" minOccurs="0" type="tns:PropertiesType"/>
        </xsd:sequence>
        <xsd:attribute name="createMissingOnLoad" type="xsd:boolean"/>
        <xsd:attribute name="saveFirst" type="xsd:boolean"/>
        <xsd:attribute name="discardValuesOnSave" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="Property">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="defaultValue" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="transient" type="xsd:boolean"/>
    </xsd:complexType>
	
    <xsd:simpleType name="TestSuiteRunTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SEQUENTIAL"/>
            <xsd:enumeration value="PARALLELL"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="StringToStringMap">
        <xsd:sequence>
            <xsd:element name="entry" maxOccurs="unbounded" minOccurs="0">

                <xsd:complexType>
                    <xsd:attribute name="key" type="xsd:string"/>
                    <xsd:attribute name="value" type="xsd:string"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="StringList">
        <xsd:sequence>
            <xsd:element name="entry" maxOccurs="unbounded" minOccurs="0" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="SoapVersionTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="1_1"/>
            <xsd:enumeration value="1_2"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="Attachment">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="contentType" type="xsd:string"/>
            <xsd:element name="size" type="xsd:long"/>
            <xsd:element name="tempFilename" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="contentId" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="part" type="xsd:string"/>
            <xsd:element name="url" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="data" type="xsd:base64Binary" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="id" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Parts">
        <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="unbounded" name="part">
                <xsd:complexType>
                    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                        <xsd:element name="contentType" type="xsd:string"/>
                    </xsd:sequence>
                    <xsd:attribute name="name" type="xsd:string"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DefinitionCache">
        <xsd:sequence maxOccurs="unbounded" minOccurs="1">
            <xsd:element name="part" type="tns:DefintionPart"/>
        </xsd:sequence>
        <xsd:attribute name="rootPart" type="xsd:string"/>
        <xsd:attribute name="cacheTime" type="xsd:dateTime"/>
        <xsd:attribute name="type" type="tns:DefinitionCacheType"/>
    </xsd:complexType>

    <xsd:complexType name="DefintionPart">
        <xsd:sequence>
            <xsd:element name="url" type="xsd:string"/>
            <xsd:element name="content" type="xsd:anyType"/>
            <xsd:element name="type" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="WorkspaceProject">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="type">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="LOCAL"/>
                            <xsd:enumeration value="REMOTE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="status">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="OPEN"/>
                            <xsd:enumeration value="CLOSED"/>
                            <xsd:enumeration value="CLOSED_AND_ENCRYPTED"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="group" type="xsd:string"/>
                <xsd:attribute name="name" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="BaseMockService">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="startScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="stopScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="properties" type="tns:PropertiesType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="onRequestScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="afterRequestScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="id" type="xsd:string"/>
                <xsd:attribute name="port" type="xsd:int"/>
                <xsd:attribute name="host" type="xsd:string"/>
                <xsd:attribute name="bindToHostOnly" type="xsd:boolean"/>
                <xsd:attribute name="path" type="xsd:string"/>
                <xsd:attribute name="docroot" type="xsd:string"/>
                <xsd:attribute name="faultMockOperation" type="xsd:string"/>
                <xsd:attribute name="dispatchResponseMessages" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MockService">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockService">
                <xsd:sequence>
                    <xsd:element name="mockOperation" type="tns:MockOperation" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="incomingWss" type="xsd:string"/>
                <xsd:attribute name="outgoingWss" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RESTMockService">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockService">
                <xsd:sequence>
                    <xsd:element name="restMockAction" type="tns:RESTMockAction" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="BaseMockOperation">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="defaultResponse" type="xsd:string" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="dispatchStyle" type="tns:MockOperationDispatchStyle" minOccurs="0"/>
                    <!-- please note that dispatchPath is used to store the script for the script dispatcher there is no path stored in this field -->
                    <xsd:element name="dispatchPath" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MockOperation">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockOperation">
                <xsd:sequence>
                    <xsd:element name="response" type="tns:MockResponse" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="dispatchConfig" type="xsd:anyType" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="interface" type="xsd:string"/>
                <xsd:attribute name="operation" type="xsd:string"/>
                <xsd:attribute name="faultMockOperation" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RESTMockAction">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockOperation">
                <xsd:sequence>
                    <xsd:element name="response" type="tns:RESTMockResponse" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="resourcePath" type="xsd:string"/>
                <xsd:attribute name="method" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="Script">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="language" type="xsd:string"/>
                <xsd:attribute name="id" type="xsd:string"/>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="BaseMockResponse">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="script" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="responseContent" type="tns:CompressedString"/>
                    <xsd:element name="attachment" type="tns:Attachment" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="header" type="tns:Header" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="httpResponseStatus" type="xsd:string"/>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
                <xsd:attribute name="compression" type="xsd:string"/>
                <xsd:attribute name="encoding" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="MockResponse">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockResponse">
                <xsd:sequence>
                    <xsd:element name="wsaConfig" type="tns:WsaConfig" maxOccurs="1" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="outgoingWss" type="xsd:string"/>
                <xsd:attribute name="useWsAddressing" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RESTMockResponse">
        <xsd:complexContent>
            <xsd:extension base="tns:BaseMockResponse">
                <xsd:attribute name="mediaType" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="Header">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="MockOperationDispatchStyle">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="RANDOM"/>
            <xsd:enumeration value="SEQUENCE"/>
            <xsd:enumeration value="XPATH"/>
            <xsd:enumeration value="SCRIPT"/>
            <xsd:enumeration value="QUERY_MATCH"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="RegistryEntry">
        <xsd:sequence>
            <xsd:element name="configuration" type="xsd:anyType"/>
        </xsd:sequence>
        <xsd:attribute name="type" type="xsd:string"/>
    </xsd:complexType>
	
    <xsd:element name="soapui-actions" type="tns:SoapUIActions"/>

    <xsd:complexType name="SoapUIActions">
        <xsd:sequence>
            <xsd:element name="action" type="tns:SoapUIAction" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="actionGroup" type="tns:SoapUIActionGroup" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SoapUIAction">
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="actionClass" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="SoapUIActionMapping">
        <xsd:attribute name="groupId" type="xsd:string"/>
        <xsd:attribute name="actionId" type="xsd:string"/>
        <xsd:attribute name="keyStroke" type="xsd:string"/>
        <xsd:attribute name="iconPath" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="description" type="xsd:string"/>
        <xsd:attribute name="param" type="xsd:string"/>
        <xsd:attribute name="position" type="tns:ActionMappingPositionType"/>
        <xsd:attribute name="positionRef" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="SoapUIActionGroup">
        <xsd:sequence>
            <xsd:element name="actionMapping" type="tns:SoapUIActionMapping" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="class" type="xsd:string"/>
        <xsd:attribute name="default" type="xsd:string"/>
    </xsd:complexType>
	
    <xsd:simpleType name="ActionMappingPositionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="BEFORE"/>
            <xsd:enumeration value="AFTER"/>
            <xsd:enumeration value="REPLACE"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="MockResponseStep">
        <xsd:sequence>
            <xsd:element name="interface" type="xsd:string"/>
            <xsd:element name="operation" type="xsd:string"/>
            <xsd:element name="path" type="xsd:string"/>
            <xsd:element name="port" type="xsd:int"/>
            <xsd:element name="timeout" type="xsd:long"/>
            <xsd:element name="response" type="tns:MockResponse"/>
            <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="query" type="xsd:string"/>
            <xsd:element name="match" type="xsd:string"/>
            <xsd:element name="host" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="handleFault" type="xsd:boolean"/>
        <xsd:attribute name="handleResponse" type="xsd:boolean"/>
        <xsd:attribute name="startStep" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="AsyncResponseStep">
        <xsd:sequence>
            <xsd:element name="interface" type="xsd:string"/>
            <xsd:element name="operation" type="xsd:string"/>
            <xsd:element name="path" type="xsd:string"/>
            <xsd:element name="requestQuery" type="xsd:string"/>
            <xsd:element name="matchingValue" type="xsd:string"/>
            <xsd:element name="port" type="xsd:int"/>
            <xsd:element name="timeout" type="xsd:long"/>
            <xsd:element name="response" type="tns:MockResponse"/>
            <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataSourceStep">
        <xsd:sequence>
            <xsd:element name="dataSource" type="tns:DataSource"/>
            <xsd:element name="shared" type="xsd:boolean"/>
            <xsd:element name="restartShared" type="xsd:boolean"/>
            <xsd:element name="preload" type="xsd:boolean"/>
            <xsd:element name="property" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="startRow" type="xsd:string"/>
            <xsd:element name="endRow" type="xsd:string"/>
            <xsd:element name="failOnEmpty" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="gotoLoopOnEmpty" type="xsd:boolean"/>
            <xsd:element name="trimValues" type="xsd:boolean"/>
            <xsd:element name="entitizeValues" type="xsd:boolean"/>
            <xsd:element name="restartOnRun" type="xsd:boolean"/>
            <xsd:element name="expandProperties" type="xsd:boolean"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataSource">
        <xsd:complexContent>
            <xsd:extension base="tns:RegistryEntry"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="DataSourceLoopStep">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="dataSourceStep" type="xsd:string"/>
            <xsd:element name="targetStep" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="CompressedString">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="compression" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="EndpointStrategy">
        <xsd:attribute name="type" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="DefaultEndpointStrategy">
        <xsd:complexContent>
            <xsd:extension base="tns:EndpointStrategy">
                <xsd:sequence>
                    <xsd:element name="endpoint" type="tns:Endpoint" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:element name="soapui-listeners" type="tns:SoapUIListeners"/>

    <xsd:complexType name="SoapUIListeners">
        <xsd:sequence>
            <xsd:element name="listener" type="tns:SoapUIListener" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SoapUIListener">
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="listenerClass" type="xsd:string"/>
        <xsd:attribute name="listenerInterface" type="xsd:string"/>
        <xsd:attribute name="singleton" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="PropertiesType">
        <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="property" type="tns:Property"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RequirementsType">
        <xsd:sequence>
            <xsd:element name="requirement" type="tns:Requirement" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Requirement">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:string"/>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="status" type="xsd:string"/>
            <xsd:element name="details" type="xsd:string"/>
            <xsd:element name="links" type="tns:StringToStringMap"/>
            <xsd:element name="testCases" type="tns:StringList"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestScenario">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="beforeRunScript" type="xsd:string"/>
                    <xsd:element name="afterRunScript" type="xsd:string"/>
                </xsd:sequence>
                <xsd:attribute name="runType" type="tns:TestSuiteRunTypes"/>
                <xsd:attribute name="abortOnError" type="xsd:boolean"/>
                <xsd:attribute name="failOnErrors" type="xsd:boolean"/>
                <xsd:attribute name="timeout" type="xsd:long"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RunTestCaseStep">
        <xsd:sequence>
            <xsd:element name="targetTestCase" type="xsd:string"/>
            <xsd:element name="properties" type="tns:PropertiesType"/>
            <xsd:element name="returnProperties" type="tns:StringList"/>
            <xsd:element name="runMode" type="tns:RunTestCaseRunModeType"/>
        </xsd:sequence>
        <xsd:attribute name="copyLoadTestProperties" type="xsd:boolean"/>
        <xsd:attribute name="copyHttpSession" type="xsd:boolean"/>
        <xsd:attribute name="ignoreEmptyProperties" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="RunTestSuiteStep">
        <xsd:sequence>
            <xsd:element name="targetTestSuite" type="xsd:string"/>
            <xsd:element name="properties" type="tns:PropertiesType"/>
            <xsd:element name="returnProperties" type="tns:StringList"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataSinkStep">
        <xsd:sequence>
            <xsd:element name="dataSink" type="tns:DataSink"/>
            <xsd:element name="skipOnEmpty" type="xsd:boolean"/>
            <xsd:element name="shared" type="xsd:boolean"/>
            <xsd:element name="properties" type="tns:PropertiesType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataSink">
        <xsd:complexContent>
            <xsd:extension base="tns:RegistryEntry"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="OutgoingWss">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="username" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="password" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="entry" type="tns:WSSEntry" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="enableSignatureConfirmation" type="xsd:boolean"/>
        <xsd:attribute name="precisionInMilliSeconds" type="xsd:boolean"/>
        <xsd:attribute name="timeStampScript" type="xsd:boolean"/>
        <xsd:attribute name="wsiBspCompliant" type="xsd:boolean"/>
        <xsd:attribute name="actor" type="xsd:string"/>
        <xsd:attribute name="mustUnderstand" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="WSSEntry">
        <xsd:complexContent>
            <xsd:extension base="tns:RegistryEntry">
                <xsd:attribute name="username" type="xsd:string"/>
                <xsd:attribute name="password" type="xsd:string"/>
                <xsd:attribute name="keyIdentifierType" type="tns:KeyIdentifierType"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="WSSCrypto">
        <xsd:complexContent>
            <xsd:extension base="tns:RegistryEntry">
                <xsd:sequence/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:simpleType name="KeyIdentifierType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ISSUER_SERIAL"/>
            <xsd:enumeration value="BST_DIRECT_REFERENCE"/>
            <xsd:enumeration value="X509_KEY_IDENTIFIER"/>
            <xsd:enumeration value="SKI_KEY_IDENTIFIER"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="WSSAddUsernameEntry">
        <xsd:complexContent>
            <xsd:extension base="tns:WSSEntry">
                <xsd:attribute name="addCreated" type="xsd:boolean"/>
                <xsd:attribute name="addNonce" type="xsd:boolean"/>
                <xsd:attribute name="passwordType" type="tns:WSSUsernamePasswordPasswordType"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:simpleType name="WSSUsernamePasswordPasswordType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PASSWORD_DIGEST"/>
            <xsd:enumeration value="PASSWORD_TEXT"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="WSSAddTimestamp">
        <xsd:complexContent>
            <xsd:extension base="tns:WSSEntry">
                <xsd:attribute name="timeToLive" type="xsd:int"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:simpleType name="WSSConfigApplyModeType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="AUTOMATIC"/>
            <xsd:enumeration value="MANUAL"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="DefinitionCacheType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="INLINE"/>
            <xsd:enumeration value="TEXT"/>
            <xsd:enumeration value="EXTERNAL"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="EndpointGroup">
        <xsd:sequence>
            <xsd:element name="endpoint" type="tns:EndpointGroupEndpoint" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="EndpointGroupEndpoint">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="interface" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="KeyMaterialCrypto">
        <xsd:sequence>
            <xsd:element name="source" type="xsd:string"/>
            <xsd:element name="password" type="xsd:string"/>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="defaultAlias" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="aliasPassword" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="cryptoProvider" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="IncomingWss">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="decryptCrypto" type="xsd:string"/>
            <xsd:element name="signatureCrypto" type="xsd:string"/>
            <xsd:element name="decryptPassword" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="WssContainer">
        <xsd:sequence>
            <xsd:element name="crypto" type="tns:KeyMaterialCrypto" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="incoming" type="tns:IncomingWss" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="outgoing" type="tns:OutgoingWss" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataGeneratorStep">
        <xsd:sequence>
            <xsd:element name="property" type="tns:DataGeneratorProperty" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DataGeneratorProperty">
        <xsd:complexContent>
            <xsd:extension base="tns:RegistryEntry">
                <xsd:sequence>
                    <xsd:element name="name" type="xsd:string"/>
                    <xsd:element name="mode">
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="STEP"/>
                                <xsd:enumeration value="READ"/>
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="shared" type="xsd:boolean"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:simpleType name="RunTestCaseRunModeType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PARALLELL"/>
            <xsd:enumeration value="SINGLETON_AND_WAIT"/>
            <xsd:enumeration value="SINGLETON_AND_FAIL"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="RestResource">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="parameters" type="tns:RestParameters"/>
                    <xsd:element name="request" type="tns:OldRestRequest" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="resource" type="tns:RestResource" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="method" type="tns:RestMethod" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="path" type="xsd:string"/>
                <xsd:attribute name="wadlId" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="OldRestRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractRequest">
                <xsd:sequence>
                    <xsd:element name="parameters" type="tns:RestParameters"/>
                    <xsd:element name="representation" type="tns:RestResourceRepresentation" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="method" type="xsd:string"/>
                <xsd:attribute name="wadlId" type="xsd:string"/>
                <xsd:attribute name="fullPath" type="xsd:string"/>
                <xsd:attribute name="mediaType" type="xsd:string"/>
                <xsd:attribute name="postQueryString" type="xsd:boolean"/>
                <xsd:attribute name="accept" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RestRequestStep">
        <xsd:sequence>
            <xsd:element name="restRequest" type="tns:RestRequest"/>
        </xsd:sequence>
        <xsd:attribute name="service" type="xsd:string"/>
        <xsd:attribute name="resourcePath" type="xsd:string"/>
        <xsd:attribute name="methodName" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="RestParameter">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string"/>
            <xsd:element name="style">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="MATRIX"/>
                        <xsd:enumeration value="HEADER"/>
                        <xsd:enumeration value="QUERY"/>
                        <xsd:enumeration value="TEMPLATE"/>
                        <xsd:enumeration value="PLAIN"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="type" type="xsd:QName" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="default" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="path" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="link" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="option" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="required" type="xsd:boolean"/>
        <xsd:attribute name="repeating" type="xsd:boolean"/>
        <xsd:attribute name="disableUrlEncoding" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="RestParameters">
        <xsd:sequence>
            <xsd:element name="parameter" type="tns:RestParameter" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RestResourceRepresentation">
        <xsd:sequence>
            <xsd:element name="mediaType" type="xsd:string"/>
            <xsd:element name="status" type="tns:statusCodesType"/>
            <xsd:element name="params" type="tns:RestParameters"/>
            <xsd:element name="element" type="xsd:QName"/>
            <xsd:element name="description" type="xsd:string"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="type" type="tns:RestResourceRepresentationType"/>
    </xsd:complexType>

    <xsd:complexType name="WsaConfig">
        <xsd:attribute name="replyTo" type="xsd:string"/>
        <xsd:attribute name="faultTo" type="xsd:string"/>
        <xsd:attribute name="action" type="xsd:string"/>
        <xsd:attribute name="from" type="xsd:string"/>
        <xsd:attribute name="messageID" type="xsd:string"/>
        <xsd:attribute name="to" type="xsd:string"/>
        <xsd:attribute name="relationshipType" type="xsd:string"/>
        <xsd:attribute name="relatesTo" type="xsd:string"/>
        <xsd:attribute name="version" type="tns:WsaVersionType"/>
        <xsd:attribute name="mustUnderstand" type="tns:MustUnderstandType"/>
        <xsd:attribute name="generateMessageId" type="xsd:boolean"/>
        <xsd:attribute name="addDefaultTo" type="xsd:boolean"/>
        <xsd:attribute name="addDefaultAction" type="xsd:boolean"/>
        <xsd:attribute name="replyToRefParams" type="xsd:string"/>
        <xsd:attribute name="faultToRefParams" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="WsrmConfig">
        <xsd:attribute name="version" type="tns:WsrmVersionType"/>
        <xsd:attribute name="ackTo" type="xsd:string"/>
        <xsd:attribute name="sequenceExpires" type="xsd:integer"/>
        <xsd:attribute name="offerEndpoint" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="MockOperationQueryMatchDispatch">
        <xsd:sequence>
            <xsd:element name="query" minOccurs="0" maxOccurs="unbounded">

                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="name" type="xsd:string"/>
                        <xsd:element name="query" type="xsd:string"/>
                        <xsd:element name="match" type="xsd:string"/>
                        <xsd:element name="response" type="xsd:string"/>
                        <xsd:element name="disabled" type="xsd:boolean"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="MustUnderstandType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="NONE"/>
            <xsd:enumeration value="TRUE"/>
            <xsd:enumeration value="FALSE"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="WsaVersionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="200508"/>
            <xsd:enumeration value="200408"/>
            <xsd:enumeration value="NONE"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="WsrmVersionType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="1.0"/>
            <xsd:enumeration value="1.1"/>
            <xsd:enumeration value="1.2"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="RestResourceRepresentationType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="REQUEST"/>
            <xsd:enumeration value="RESPONSE"/>
            <xsd:enumeration value="FAULT"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="statusCodesType">
        <xsd:list itemType="xsd:int"/>
    </xsd:simpleType>
	
    <xsd:element name="testCase" type="tns:TestCase"/>
	
    <xsd:element name="operation" type="tns:Operation"/>
	
    <xsd:element name="mockOperation" type="tns:MockOperation"/>
	
    <xsd:simpleType name="AnonymousType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="optional"/>
            <xsd:enumeration value="required"/>
            <xsd:enumeration value="prohibited"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:element name="interface" type="tns:TestAssertion"/>
	
    <xsd:element name="mockService" type="tns:MockService"/>
	
    <xsd:element name="testSuite" type="tns:TestSuite"/>
	
    <xsd:element name="lockedFileInfo" type="tns:LockedFileInfo"/>

    <xsd:complexType name="LockedFileInfo">
        <xsd:sequence>
            <xsd:element name="owner" type="xsd:string"/>
            <xsd:element name="date" type="xsd:date"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:element name="testCaseRunLog">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="testCaseRunLogTestStep" maxOccurs="unbounded" minOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="message" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
                            <xsd:element name="errorMessage" type="xsd:string"/>
                        </xsd:sequence>
                        <xsd:attribute name="name" type="xsd:string"/>
                        <xsd:attribute name="timeTaken" type="xsd:string"/>
                        <!-- TODO Should this be an enum? -->
                        <xsd:attribute name="status" type="xsd:string"/>
                        <xsd:attribute name="timestamp" type="xsd:string"/>
                        <xsd:attribute name="httpStatus" type="xsd:string"/>
                        <xsd:attribute name="contentLength" type="xsd:string"/>
                        <xsd:attribute name="dnsTime" type="xsd:string"/>
                        <xsd:attribute name="connectTime" type="xsd:string"/>
                        <xsd:attribute name="timeToFirstByte" type="xsd:string"/>
                        <xsd:attribute name="readTime" type="xsd:string"/>
                        <xsd:attribute name="totalTime" type="xsd:string"/>
                        <xsd:attribute name="endpoint" type="xsd:string"/>
                        <xsd:attribute name="httpMethod" type="xsd:string"/>
                        <xsd:attribute name="ipAddress" type="xsd:string"/>
                        <xsd:attribute name="port" type="xsd:int"/>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="testCase" type="xsd:string"/>
            <xsd:attribute name="timeTaken" type="xsd:string"/>
            <!-- TODO Should this be an enum? -->
            <xsd:attribute name="status" type="xsd:string"/>
            <xsd:attribute name="timeStamp" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>
	
    <xsd:element name="TestOnDemandLocationsRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Request">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Header" type="tns:TestOnDemandHeader"/>
                            <xsd:element name="Body" type="tns:TestOnDemandLocationBody"/>
                        </xsd:sequence>
                        <xsd:attribute name="api_version" type="xsd:string"/>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
	
    <xsd:element name="TestOnDemandUploadRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="Request">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Header" type="tns:TestOnDemandHeader"/>
                            <xsd:element name="Body" type="tns:TestOnDemandUploadBody"/>
                        </xsd:sequence>
                        <xsd:attribute name="api_version" type="xsd:string"/>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="TestOnDemandHeader">
        <xsd:sequence>
            <xsd:element name="UserAgent" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandLocationBody">
        <xsd:sequence>
            <xsd:element name="Command" type="tns:TestOnDemandCommand"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandUploadBody">
        <xsd:sequence>
            <xsd:element name="Command" type="tns:TestOnDemandCommand"/>
            <xsd:element name="Txn" type="tns:TestOnDemandTxn"/>
            <xsd:element name="Keystore" type="tns:TestOnDemandKeystore"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandCommand">
        <xsd:sequence>
            <xsd:element name="Name" type="xsd:string"/>
            <xsd:element name="Parameters" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandTxn">
        <xsd:sequence>
            <xsd:element name="TestSuite" type="tns:TestOnDemandTestSuite"/>
            <xsd:element name="TestCase" type="tns:TestOnDemandTestCase"/>
            <xsd:element name="Content" type="tns:TestOnDemandContent"/>
            <xsd:element name="Password" type="tns:TestOnDemandProjectPassword"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandTestSuite">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandTestCase">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandContent">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
                <xsd:attribute name="type" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandProjectPassword">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandKeystore">
        <xsd:sequence>
            <xsd:element name="File" type="tns:TestOnDemandFile"/>
            <xsd:element name="Password" type="tns:TestOnDemandKeystorePassword"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandFile">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="TestOnDemandKeystorePassword">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="enctype" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="DriversType">
        <xsd:sequence>
            <xsd:element name="driver" type="tns:DriverConfig" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DriverConfig">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="connectionTemplateString" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReportTemplate">
        <xsd:annotation/>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="reportType" type="tns:ReportType"/>
            <xsd:element name="reportLevel" type="tns:ReportLevelTypes"/>
            <xsd:element name="data" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="subreports" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>This should be list of uniq names. Also,	subreports should be part of project.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="scope" type="tns:scopeType"/>
            <xsd:element name="dataSource" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="DatabaseConnectionContainer">
        <xsd:sequence>
            <xsd:element name="databaseConnection" type="tns:DatabaseConnection" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="NewXSDComplexType"/>

    <xsd:complexType name="DatabaseConnection">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="driver" type="xsd:string"/>
            <xsd:element name="connectionString" type="xsd:string"/>
            <xsd:element name="password" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OAuth2ProfileContainer">
        <xsd:sequence>
            <xsd:element name="oAuth2Profile" type="tns:OAuth2Profile" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OAuth1ProfileContainer">
        <xsd:sequence>
            <xsd:element name="oAuth1Profile" type="tns:OAuth1Profile" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:simpleType name="RefreshAccessTokenMethod">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="AUTOMATIC"/>
            <xsd:enumeration value="MANUAL"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="AccessTokenStatus">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="UNKNOWN"/>
            <xsd:enumeration value="ENTERED_MANUALLY"/>
            <xsd:enumeration value="WAITING_FOR_AUTHORIZATION"/>
            <xsd:enumeration value="RECEIVED_AUTHORIZATION_CODE"/>
            <xsd:enumeration value="RETRIEVED_FROM_SERVER"/>
            <xsd:enumeration value="EXPIRED"/>
            <xsd:enumeration value="RETRIEVAL_CANCELED"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="OAuth2Profile">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="clientID" type="xsd:string"/>
            <xsd:element name="clientSecret" type="xsd:string"/>
            <xsd:element name="authorizationURI" type="xsd:string"/>
            <xsd:element name="accessTokenURI" type="xsd:string"/>
            <xsd:element name="redirectURI" type="xsd:string"/>
            <xsd:element name="accessToken" type="xsd:string"/>
            <xsd:element name="accessTokenPosition" type="tns:AccessTokenPosition"/>
            <xsd:element name="oAuth2Flow" type="tns:OAuth2Flow"/>
            <xsd:element name="refreshAccessTokenMethod" type="tns:RefreshAccessTokenMethod"/>
            <xsd:element name="refreshToken" type="xsd:string"/>
            <xsd:element name="scope" type="xsd:string"/>
            <xsd:element name="accessTokenStatus" type="tns:AccessTokenStatus"/>
            <xsd:element name="accessTokenStartingStatus" type="tns:AccessTokenStatus"/>
            <xsd:element name="accessTokenExpirationTime" type="xsd:long"/>
            <xsd:element name="accessTokenIssuedTime" type="xsd:long"/>
            <xsd:element name="javaScripts" type="tns:StringList"/>
            <xsd:element name="manualAccessTokenExpirationTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="useManualAccessTokenExpirationTime" type="xsd:boolean"/>
            <xsd:element name="manualAccessTokenExpirationTimeUnit" type="tns:TimeUnit"/>
            <xsd:element name="resourceOwnerName" type="xsd:string"/>
            <xsd:element name="resourceOwnerPassword" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OAuth1Profile">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="authorizationURI" type="xsd:string"/>
            <xsd:element name="accessTokenURI" type="xsd:string"/>
            <xsd:element name="redirectURI" type="xsd:string"/>
            <xsd:element name="accessToken" type="xsd:string"/>
            <xsd:element name="accessTokenPosition" type="tns:AccessTokenPosition"/>
            <xsd:element name="accessTokenStatus" type="tns:AccessTokenStatus" minOccurs="0"/>
            <xsd:element name="accessTokenStartingStatus" type="tns:AccessTokenStatus"/>
            <xsd:element name="accessTokenIssuedTime" type="xsd:long"/>
            <xsd:element name="manualAccessTokenExpirationTime" type="xsd:string" minOccurs="0"/>
            <xsd:element name="useManualAccessTokenExpirationTime" type="xsd:boolean"/>
            <xsd:element name="manualAccessTokenExpirationTimeUnit" type="tns:TimeUnit"/>
            <xsd:element name="temporaryTokenURI" type="xsd:string"/>
            <xsd:element name="consumerKey" type="xsd:string"/>
            <xsd:element name="consumerSecret" type="xsd:string"/>
            <xsd:element name="tokenSecret" type="xsd:string"/>
            <xsd:element name="tokenSecretStatus" type="tns:AccessTokenStatus" minOccurs="0"/>
            <xsd:element name="tokenSecretStartingStatus" type="tns:AccessTokenStatus"/>
        </xsd:sequence>
    </xsd:complexType>
	
    <xsd:simpleType name="TimeUnit">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SECONDS"/>
            <xsd:enumeration value="MINUTES"/>
            <xsd:enumeration value="HOURS"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="AccessTokenPosition">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="QUERY"/>
            <xsd:enumeration value="HEADER"/>
            <xsd:enumeration value="BODY"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="OAuth2Flow">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="AUTHORIZATION_CODE_GRANT"/>
            <xsd:enumeration value="IMPLICIT_GRANT"/>
            <xsd:enumeration value="RESOURCE_OWNER_PASSWORD_CREDENTIALS"/>
            <xsd:enumeration value="CLIENT_CREDENTIALS_GRANT"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="ReportLevelTypes">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MAINREPORT"/>
            <xsd:enumeration value="SUBREPORT"/>
            <xsd:enumeration value="CODE"/>
            <xsd:enumeration value="UNKNOWN"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="ReportType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PROJECT"/>
            <xsd:enumeration value="TESTSUITE"/>
            <xsd:enumeration value="TESTCASE"/>
            <xsd:enumeration value="LOADTEST"/>
            <xsd:enumeration value="UNKNOWN"/>
            <xsd:enumeration value="MONITOR"/>
            <xsd:enumeration value="MOCKSERVICE"/>
            <xsd:enumeration value="INTERFACE"/>
            <xsd:enumeration value="CODE"/>
            <xsd:enumeration value="COMMON"/>
            <xsd:enumeration value="SECURITYTESTCASE"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="RestMethod">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="parameters" type="tns:RestParameters"/>
                    <xsd:element name="representation" type="tns:RestResourceRepresentation" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="request" type="tns:RestRequest" maxOccurs="unbounded" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="method" type="xsd:string"/>
                <xsd:attribute name="wadlId" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="RestRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractRequest">
                <xsd:sequence>
                    <xsd:element name="parameters" type="tns:StringToStringMap"/>
                    <xsd:element name="parameterOrder" type="tns:StringList" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="wadlId" type="xsd:string"/>
                <xsd:attribute name="fullPath" type="xsd:string"/>
                <xsd:attribute name="mediaType" type="xsd:string"/>
                <xsd:attribute name="postQueryString" type="xsd:boolean"/>
                <xsd:attribute name="accept" type="xsd:string"/>
                <xsd:attribute name="multiValueDelimiter" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="HttpRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:AbstractRequest">
                <xsd:sequence>
                    <xsd:element name="parameters" type="tns:RestParameters"/>
                </xsd:sequence>
                <xsd:attribute name="mediaType" type="xsd:string"/>
                <xsd:attribute name="method" type="xsd:string"/>
                <xsd:attribute name="postQueryString" type="xsd:boolean"/>
                <xsd:attribute name="downloadIncludedResources" type="xsd:boolean"/>
                <xsd:attribute name="multiValueDelimiter" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	
    <xsd:element name="reportTemplate" type="tns:ReportTemplate"/>
	
    <xsd:simpleType name="scopeType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PROJECT"/>
            <xsd:enumeration value="GLOBAL"/>
        </xsd:restriction>
    </xsd:simpleType>
	
    <xsd:simpleType name="dataSourceType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="TESTCASE"/>
            <xsd:enumeration value="TESTCASEPROPERTIES"/>
            <xsd:enumeration value="TESTCASETESTRUN"/>
            <xsd:enumeration value="TESTCASETESTSTEPS"/>
            <xsd:enumeration value="UNKNOWN"/>
            <xsd:enumeration value="LOADTESTSTATISTICS"/>
            <xsd:enumeration value="LOADTESTLOG"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="XmlTemplatesType">
        <xsd:sequence>
            <xsd:element name="property" type="tns:Property" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="scope" type="tns:scopeType"/>
            <xsd:element name="path" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="XmlTemplates">
        <xsd:sequence>
            <xsd:element name="templates" type="tns:XmlTemplatesType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReportingType">
        <xsd:sequence>
            <xsd:element name="reportTemplates" type="tns:ReportTemplate" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="xmlTemplates" type="tns:XmlTemplates" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="parameters" type="tns:PropertiesType" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="EventHandlerType">
        <xsd:sequence>
            <xsd:element name="script" type="tns:Script"/>
        </xsd:sequence>
        <xsd:attribute name="type" type="xsd:string"/>
        <xsd:attribute name="target" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="JdbcRequestTestStep">
        <xsd:sequence>
            <xsd:element name="dbConnectionName" type="xsd:string"/>
            <xsd:element name="driver" type="xsd:string"/>
            <xsd:element name="connectionString" type="xsd:string"/>
            <xsd:element name="password" type="xsd:string"/>
            <xsd:element name="query" type="xsd:string"/>
            <xsd:element name="storedProcedure" type="xsd:boolean"/>
            <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="properties" type="tns:PropertiesType"/>
        </xsd:sequence>
        <xsd:attribute name="convertColumnNamesToUpperCase" type="xsd:boolean"/>
        <xsd:attribute name="queryTimeout" type="xsd:string"/>
        <xsd:attribute name="maxRows" type="xsd:string"/>
        <xsd:attribute name="fetchSize" type="xsd:string"/>
    </xsd:complexType>
    
    <xsd:complexType name="AssertableTestStep">
        <xsd:sequence>
            <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="properties" type="tns:PropertiesType"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="JMSHeaderConf">
        <xsd:attribute name="JMSCorrelationID" type="xsd:string"/>
        <xsd:attribute name="JMSReplyTo" type="xsd:string"/>
        <xsd:attribute name="JMSType" type="xsd:string"/>
        <xsd:attribute name="JMSPriority" type="xsd:string"/>
        <xsd:attribute name="JMSDeliveryMode" type="tns:JMSDeliveryModeType"/>
        <xsd:attribute name="TimeToLive" type="xsd:string"/>
        <xsd:attribute name="durableSubscriptionName" type="xsd:string"/>
        <xsd:attribute name="clientID" type="xsd:string"/>
        <xsd:attribute name="messageSelector" type="xsd:string"/>
        <xsd:attribute name="sendAsBytesMessage" type="xsd:boolean"/>
        <xsd:attribute name="soapActionAdd" type="xsd:boolean"/>
    </xsd:complexType>
	
    <xsd:simpleType name="JMSDeliveryModeType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="NON_PERSISTENT"/>
            <xsd:enumeration value="PERSISTENT"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="JMSProperty">
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="value" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="JMSPropertiesConf">
        <xsd:sequence>
            <xsd:element name="jmsProperties" type="tns:JMSProperty" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="AMFRequestTestStep">
        <xsd:sequence>
            <xsd:element name="properties" type="tns:PropertiesType"/>
            <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="endpoint" type="xsd:string"/>
            <xsd:element name="script" type="tns:Script"/>
            <xsd:element name="amfCall" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ManualTestStep">
        <xsd:sequence>
            <xsd:element name="expectedResult" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SecurityTest">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="setupScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="tearDownScript" type="tns:Script" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="testStepSecurityTest" type="tns:TestStepSecurityTest" maxOccurs="unbounded" minOccurs="1"/>
                    <xsd:element name="properties" type="tns:PropertiesType" maxOccurs="1" minOccurs="0"/>
                    <xsd:element name="reportScript" type="tns:Script" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="reportParameters" type="tns:PropertiesType" minOccurs="0" maxOccurs="1"/>
                </xsd:sequence>
                <xsd:attribute name="failOnError" type="xsd:boolean"/>
                <xsd:attribute name="failSecurityTestOnCheckErrors" type="xsd:boolean"/>
                <xsd:attribute name="failSecurityTestOnScanErrors" type="xsd:boolean"/>
                <xsd:attribute name="skipDataSourceLoops" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="SecurityCheck">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="config" type="xsd:anyType"/>
                    <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="testStep" type="tns:TestStep"/>
                    <xsd:element name="checkedPameters" type="tns:CheckedParametersList" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="checkedParameters" type="tns:CheckedParametersList" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="executionStrategy" type="tns:ExecutionStrategy"/>
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string"/>
                <xsd:attribute name="applyForFailedStep" type="xsd:boolean"/>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="SecurityScan">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="config" type="xsd:anyType"/>
                    <xsd:element name="assertion" type="tns:TestAssertion" maxOccurs="unbounded" minOccurs="0"/>
                    <xsd:element name="testStep" type="tns:TestStep"/>
                    <xsd:element name="checkedParameters" type="tns:CheckedParametersList" minOccurs="1" maxOccurs="1"/>
                    <xsd:element name="executionStrategy" type="tns:ExecutionStrategy"/>
                </xsd:sequence>
                <xsd:attribute name="type" type="xsd:string"/>
                <xsd:attribute name="applyForFailedStep" type="xsd:boolean"/>
                <xsd:attribute name="disabled" type="xsd:boolean"/>
                <xsd:attribute name="runOnlyOnce" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="TestStepSecurityTest">
        <xsd:sequence>
            <xsd:element name="testStepId" type="xsd:string"/>
            <xsd:element name="testStepSecurityCheck" type="tns:SecurityCheck" maxOccurs="unbounded" minOccurs="1"/>
            <xsd:element name="testStepSecurityScan" type="tns:SecurityScan" maxOccurs="unbounded" minOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ParameterExposureCheck">
        <xsd:sequence>
            <xsd:element name="parameterExposureStrings" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="CrossSiteScriptingScan">
        <xsd:sequence>
            <xsd:element name="parameterExposureStrings" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GroovySecurityCheck">
        <xsd:sequence>
            <xsd:element name="executeScript" type="tns:Script"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GroovySecurityScan">
        <xsd:sequence>
            <xsd:element name="executeScript" type="tns:Script"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReflectedXSSCheck">
        <xsd:sequence>
            <xsd:element name="paramToCheck" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReflectedXSSScan">
        <xsd:sequence>
            <xsd:element name="paramToCheck" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SQLInjectionCheck">
        <xsd:sequence>
            <xsd:element name="sqlInjectionStrings" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SQLInjectionScan">
        <xsd:sequence>
            <xsd:element name="sqlInjectionStrings" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Fuzzer">
        <xsd:sequence>
            <xsd:element name="Value" type="xsd:string" maxOccurs="unbounded" minOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="XmlBombSecurityCheck">
        <xsd:sequence>
            <xsd:element name="xmlBombs" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="attachXmlBomb" type="xsd:boolean"/>
        <xsd:attribute name="xmlAttachmentPrefix" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="XmlBombSecurityScan">
        <xsd:sequence>
            <xsd:element name="xmlBombs" type="xsd:string" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="attachXmlBomb" type="xsd:boolean"/>
        <xsd:attribute name="xmlAttachmentPrefix" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="MaliciousAttachment">
        <xsd:attribute name="filename" type="xsd:string"/>
        <xsd:attribute name="size" type="xsd:long"/>
        <xsd:attribute name="contentType" type="xsd:string"/>
        <xsd:attribute name="enabled" type="xsd:boolean"/>
        <xsd:attribute name="cached" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="MaliciousAttachmentElement">
        <xsd:sequence>
            <xsd:element name="replaceAttachment" type="tns:MaliciousAttachment" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="generateAttachment" type="tns:MaliciousAttachment" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="key" type="xsd:string"/>
        <xsd:attribute name="remove" type="xsd:boolean"/>
    </xsd:complexType>

    <xsd:complexType name="MaliciousAttachmentSecurityCheck">
        <xsd:sequence>
            <xsd:element name="element" type="tns:MaliciousAttachmentElement" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="requestTimeout" type="xsd:int"/>
    </xsd:complexType>

    <xsd:complexType name="MaliciousAttachmentSecurityScan">
        <xsd:sequence>
            <xsd:element name="element" type="tns:MaliciousAttachmentElement" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="requestTimeout" type="xsd:int"/>
    </xsd:complexType>

    <xsd:complexType name="CheckedParameter">
        <xsd:attribute name="parameterName" type="xsd:string"/>
        <xsd:attribute name="checked" type="xsd:boolean"/>
        <xsd:attribute name="xpath" type="xsd:string"/>
        <xsd:attribute name="type" type="xsd:string"/>
        <xsd:attribute name="label" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="CheckedParametersList">
        <xsd:sequence>
            <xsd:element name="parameters" type="tns:CheckedParameter" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SensitiveInformation">
        <xsd:complexContent>
            <xsd:extension base="tns:ModelItem">
                <xsd:sequence>
                    <xsd:element name="configuration" type="xsd:anySimpleType"/>
                </xsd:sequence>
                <xsd:attribute name="level" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="ExecutionStrategy">
        <xsd:sequence>
            <xsd:element name="strategy" minOccurs="1" maxOccurs="1" type="tns:StrategyType"/>
            <xsd:element name="delay" type="xsd:int" minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="immutable" type="xsd:boolean"/>
    </xsd:complexType>
	
    <xsd:simpleType name="StrategyType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ONE_BY_ONE"/>
            <xsd:enumeration value="ALL_AT_ONCE"/>
            <xsd:enumeration value="NO_STRATEGY"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="InvalidSecurityCheck">
        <xsd:sequence>
            <xsd:element name="typesList" type="tns:SchemaTypeForSecurityCheck" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="InvalidSecurityScan">
        <xsd:sequence>
            <xsd:element name="typesList" type="tns:SchemaTypeForSecurityScan" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SchemaTypeForSecurityCheck">
        <xsd:sequence>
            <xsd:element name="type" type="xsd:int"/>
            <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="SchemaTypeForSecurityScan">
        <xsd:sequence>
            <xsd:element name="type" type="xsd:int"/>
            <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="XPathInjection">
        <xsd:sequence>
            <xsd:element name="xpathList" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="MalformedXml">
        <xsd:sequence>
            <xsd:element name="insertNewElement" type="xsd:boolean"/>
            <xsd:element name="newElementValue" type="xsd:string"/>
            <xsd:element name="leaveTagOpen" type="xsd:boolean"/>
            <xsd:element name="changeTagName" type="xsd:boolean"/>
            <xsd:element name="attributeMutation" type="tns:MalformedXmlAttribute"/>
            <xsd:element name="insertInvalidCharacter" type="xsd:boolean"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="MalformedXmlAttribute">
        <xsd:sequence>
            <xsd:element name="leaveAttributeOpen" type="xsd:boolean"/>
            <xsd:element name="insertInvalidChars" type="xsd:boolean"/>
            <xsd:element name="mutateAttributes" type="xsd:boolean"/>
            <xsd:element name="newAttributeName" type="xsd:string"/>
            <xsd:element name="newAttributeValue" type="xsd:string"/>
            <xsd:element name="addNewAttribute" type="xsd:boolean"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="soapui-factories" type="tns:SoapUIFactories"/>

    <xsd:complexType name="SoapUIFactory">
        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="factoryType" type="xsd:string"/>
        <xsd:attribute name="factoryClass" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="SoapUIFactories">
        <xsd:sequence>
            <xsd:element name="factory" type="tns:SoapUIFactory" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="searchPatterns" type="tns:SearchPatterns"/>

    <xsd:complexType name="SearchPatterns">
        <xsd:sequence>
            <xsd:element name="Regex" type="tns:Regex" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Regex">
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="message" type="xsd:string"/>
            <xsd:element name="pattern" type="xsd:string" maxOccurs="unbounded" minOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="FuzzerScan">
        <xsd:sequence>
            <xsd:element name="minimal" type="xsd:int"/>
            <xsd:element name="maximal" type="xsd:int"/>
            <xsd:element name="numberOfRequest" type="xsd:int"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="Environment">
        <xsd:sequence>
            <xsd:element name="service" type="tns:Service" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="property" type="tns:Property" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="databaseConnectionContainer" type="tns:DatabaseConnectionContainer" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="EnvironmentEndpoint">
        <xsd:simpleContent>
            <xsd:extension base="tns:Endpoint">
                <xsd:attribute name="proxyHost" type="xsd:string"/>
                <xsd:attribute name="proxyPort" type="xsd:string"/>
                <xsd:attribute name="proxyUsername" type="xsd:string"/>
                <xsd:attribute name="proxyPassword" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="Service">
        <xsd:sequence>
            <xsd:element name="interfaceId" type="xsd:string" maxOccurs="1" minOccurs="1"/>
            <xsd:element name="endpoint" type="tns:EnvironmentEndpoint" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="type">
            <xsd:simpleType>
                <xsd:restriction base="tns:typeType">
                    <xsd:enumeration value="SOAP"/>
                    <xsd:enumeration value="REST"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
	
    <xsd:simpleType name="typeType">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>

    <xsd:complexType name="BreakPoint">
        <xsd:sequence>
            <xsd:element name="testStepId" type="xsd:string"/>
            <xsd:element name="status" type="xsd:string"/>
            <xsd:element name="properties" type="tns:BreakPointProperties" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="BreakPointProperties">
        <xsd:sequence>
            <xsd:element name="conditionEnabled" type="xsd:boolean"/>
            <xsd:element name="condition" type="tns:Script"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="MessageContentElement">
        <xsd:sequence>
            <xsd:element name="xpath" type="xsd:string"/>
            <xsd:element name="element" type="xsd:string"/>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="operator" type="xsd:string"/>
            <xsd:element name="enabled" type="xsd:boolean"/>
            <xsd:element name="expectedValue" type="xsd:string"/>
            <xsd:element name="hasValue" type="xsd:boolean"/>
            <xsd:element name="value" type="xsd:string"/>
            <xsd:element name="numberType" type="xsd:boolean"/>
            <xsd:element name="message" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="MessageContentAssertion">
        <xsd:sequence>
            <xsd:element name="elements" type="tns:MessageContentElement" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="originalMessage" type="tns:CompressedString"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:attribute name="NewAttribute" type="xsd:string"/>

    <xsd:complexType name="GroupAssertionList">
        <xsd:sequence>
            <xsd:element name="assertions" type="tns:AssertionEntry" maxOccurs="unbounded" minOccurs="0"/>
            <xsd:element name="operation" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="AssertionTestStep">
        <xsd:sequence>
            <xsd:element name="entry" type="tns:AssertionEntry" maxOccurs="unbounded" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="AssertionEntry">
        <xsd:sequence>
            <xsd:element name="id" type="xsd:string"/>
            <xsd:element name="isGroup" type="xsd:boolean"/>
            <xsd:element name="sourceId" type="xsd:string"/>
            <xsd:element name="propertyName" type="xsd:string"/>
            <xsd:element name="assertion" type="tns:TestAssertion"/>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>